/*
 * This file is generated by jOOQ.
 */
package com.jooq.demo.generator.tables.daos;


import com.jooq.demo.generator.tables.Info;
import com.jooq.demo.generator.tables.records.InfoRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfoDao extends DAOImpl<InfoRecord, com.jooq.demo.generator.tables.pojos.Info, Integer> {

    /**
     * Create a new InfoDao without any configuration
     */
    public InfoDao() {
        super(Info.INFO, com.jooq.demo.generator.tables.pojos.Info.class);
    }

    /**
     * Create a new InfoDao with an attached configuration
     */
    public InfoDao(Configuration configuration) {
        super(Info.INFO, com.jooq.demo.generator.tables.pojos.Info.class, configuration);
    }

    @Override
    public Integer getId(com.jooq.demo.generator.tables.pojos.Info object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.demo.generator.tables.pojos.Info> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Info.INFO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.jooq.demo.generator.tables.pojos.Info> fetchById(Integer... values) {
        return fetch(Info.INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.jooq.demo.generator.tables.pojos.Info fetchOneById(Integer value) {
        return fetchOne(Info.INFO.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.demo.generator.tables.pojos.Info> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Info.INFO.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.jooq.demo.generator.tables.pojos.Info> fetchByName(String... values) {
        return fetch(Info.INFO.NAME, values);
    }

    /**
     * Fetch records that have <code>price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.jooq.demo.generator.tables.pojos.Info> fetchRangeOfPrice(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Info.INFO.PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<com.jooq.demo.generator.tables.pojos.Info> fetchByPrice(Integer... values) {
        return fetch(Info.INFO.PRICE, values);
    }
}
